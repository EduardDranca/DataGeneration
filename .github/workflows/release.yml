name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release to Maven Central
    runs-on: ubuntu-latest
    environment: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Releasing version: $VERSION"

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: central
        server-username: CENTRAL_USERNAME
        server-password: CENTRAL_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Validate version compatibility
      run: |
        TAG_VERSION="${{ steps.version.outputs.version }}"
        POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        
        echo "Tag version: $TAG_VERSION"
        echo "POM version: $POM_VERSION"
        
        # Extract major.minor from both versions
        TAG_MAJOR_MINOR=$(echo "$TAG_VERSION" | cut -d. -f1-2)
        POM_MAJOR_MINOR=$(echo "$POM_VERSION" | cut -d. -f1-2)
        
        # Remove -SNAPSHOT suffix from POM version for comparison
        POM_MAJOR_MINOR_CLEAN=$(echo "$POM_MAJOR_MINOR" | sed 's/-SNAPSHOT//')
        
        echo "Tag major.minor: $TAG_MAJOR_MINOR"
        echo "POM major.minor: $POM_MAJOR_MINOR_CLEAN"
        
        if [ "$TAG_MAJOR_MINOR" != "$POM_MAJOR_MINOR_CLEAN" ]; then
          echo "Version mismatch!"
          echo "Tag version $TAG_VERSION (major.minor: $TAG_MAJOR_MINOR) doesn't match POM version $POM_VERSION (major.minor: $POM_MAJOR_MINOR_CLEAN)"
          echo "Please ensure the tag version is compatible with the POM version."
          echo "Expected tag format: v${POM_MAJOR_MINOR_CLEAN}.X where X is the patch version"
          exit 1
        fi
        
        echo "Version compatibility check passed"

    - name: Update version in pom.xml
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.version }} -DgenerateBackupPoms=false

    - name: Run tests
      run: mvn clean test

    - name: Deploy to Maven Central
      env:
        CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
        CENTRAL_PASSWORD: ${{ secrets.CENTRAL_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        export GPG_TTY=$(tty)
        mvn clean deploy -Prelease -DskipTests
